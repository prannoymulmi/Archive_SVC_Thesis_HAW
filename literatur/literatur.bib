@misc{HAWHamburgMARS,
author = {{HAW Hamburg}},
title = {{- MARS Group}},
howpublished="[Online] \url{https://mars-group.org/}",
urldate = {2018-02-08}
}



@article{Torre2017,
author = {Torre, Cesar De La and Wagner, Bill and Rousos, Mike},
file = {:Users/prannoy/Thesis/Research/NET-Microservices-Architecture-for-Containerized-NET-Applications-(Microsoft-eBook).pdf:pdf},
title = {{.NET Microservices: Architecture for Containerized .NET Apllications Edition 1.0}},
year = {2017}
}


@misc{Timeseries,
author = {North Carolina State University, USA},
abstract = {A time series is a sequence of data points being recorded at specific times. Formally, let   , , P   be a probability space, and T an index set. A real valued stochastic process is a real valued function () t X  such that for each fixed t T  , () t X  is a random variable on   , , P   . When the index set T corresponds to time indices (discrete or continuous), we will call () t X  a time series.},
file = {::},
title = {{Definition and examples of time series}},
howpublished = "[Online] \url{https://www.stat.ncsu.edu/people/martin/courses/st782/Notes/Definition}",
}

@article{Savic2007,
abstract = {In the field of simulations storing and exchanging simulation data are important tasks. The quantity of simulation data can be rather big and at the same time this data can appear in different formats. The conversion of big quantities of data can be extremely time-consuming. In this article we focus on simulations in telecommunications. Therefore we have studied the needs of the telecommunication community and defined a reference model of a simulation process. According to the needs we have developed a software tool CostGlue, which represents a central repository for data produced with different types of simulation tools and acts as a converter of different output formats into different input formats. CostGlue has modular software architecture. This enables further development and contributions from any other research sphere of activity. The core of the software tool represents the application CoreGlue responsible for communicating with the database. CoreGlue represents unified interface for writing to the database and reading from it. Specific functions like import and export of data and different mathematical calculations are represented as a set of self-described modules, which are loaded as necessary. The graphic user interface is introduced as a web application for the simplicity of use and effective remote access to the application. The software package CostGlue is going to be released as free software with the possibility of further development.},
author = {Savic, Dragan and Potorti, Francesco and Furfari, Francesco and Pustiek, Matevz and Beter, Janez and Tomazic, Sao},
doi = {10.1007/978-0-387-73908-3_23},
file = {:Users/prannoy/Thesis/Research/HDF5ForSimulations.pdf:pdf},
isbn = {978-0-387-73907-6},
journal = {Recent Advances in Modeling and Simulation Tools for Communication Networks and Services},
keywords = {Computer simulation;Computer software;},
pages = {443--462},
title = {{A tool for packaging and exchanging simulation results}},
year = {2007},
note={{ISBN:} 978-0-387-73907-6}
}

@article{Heber2014,
abstract = {The purpose of this document is to offer some guidance on the use of HDF5 with Hadoop. If you are puzzled by the relationship between HDF and Hadoop, welcome to the club! We have condensed the acme of confusion into a few questions for which one might expect straightforward answers. In the discussion, we present our answers at three levels of intimidation: a one phrase answer (in the subtitle), a multi-paragraph elaboration, and a set of appendices. If you are not satisfied after the third level, please, send us your answer! And don't hesitate to send us your questions either.},
author = {Heber, Gerd and Folk, Mike and Koziol, Quincey A},
file = {:Users/prannoy/Thesis/Research/Big{\_}HDF{\_}FAQs.pdf:pdf},
pages = {1--32},
title = {{Big HDF FAQs - Everything that HDF Users have Always Wanted to Know about Hadoop . . . But Were Ashamed to Ask}},
year = {2014}
}

@article{Holzmann2016,
abstract = {Web archives are a valuable resource for researchers of vari-ous disciplines. However, to use them as a scholarly source, researchers require a tool that provides efficient access to Web archive data for extraction and derivation of smaller datasets. Besides efficient access we identify five other ob-jectives based on practical researcher needs such as ease of use, extensibility and reusability. Towards these objectives we propose ArchiveSpark, a framework for efficient, distributed Web archive processing that builds a research corpus by working on existing and standardized data formats commonly held by Web archiv-ing institutions. Performance optimizations in ArchiveS-park, facilitated by the use of a widely available metadata index, result in significant speed-ups of data processing. Our benchmarks show that ArchiveSpark is faster than alterna-tive approaches without depending on any additional data stores while improving usability by seamlessly integrating queries and derivations with external tools.},
archivePrefix = {arXiv},
arxivId = {arXiv:1702.01015v1},
author = {Holzmann, Helge and Goel, Vinay and Anand, Avishek},
doi = {10.1145/2910896.2910902},
eprint = {arXiv:1702.01015v1},
file = {:Users/prannoy/Thesis/Research/ActiveSpark.pdf:pdf},
isbn = {978-1-4503-4229-2},
issn = {15525996},
journal = {Proceedings of the 16th ACM/IEEE-CS on Joint Conference on Digital Libraries},
keywords = {big data,data extraction,web archives},
pages = {83--92},
title = {{ArchiveSpark: Efficient Web Archive Access, Extraction and Derivation}},
url = {http://doi.acm.org/10.1145/2910896.2910902},
year = {2016},
note={{ISBN:} 978-1-4503-4229-2}
}

@article{Heber2014a,
abstract = {The purpose of this document is to offer some guidance on the use of HDF5 with Hadoop. If you are puzzled by the relationship between HDF and Hadoop, welcome to the club! We have condensed the acme of confusion into a few questions for which one might expect straightforward answers. In the discussion, we present our answers at three levels of intimidation: a one phrase answer (in the subtitle), a multi-paragraph elaboration, and a set of appendices. If you are not satisfied after the third level, please, send us your answer! And don't hesitate to send us your questions either. We would like to thank all advocates, developers, maintainers, and supporters for their contributions to open-source software including HDF5 and Apache Hadoop.},
author = {Heber, Gerd and Group, The H D F and Folk, Mike and Group, The H D F and Koziol, Quincey A and Group, The H D F},
file = {:Users/prannoy/Thesis/Research/HadoopVsHDF5.pdf:pdf},
pages = {1--32},
title = {{Big HDF FAQs}},
howpublished = "[Online] \url{https://support.hdfgroup.org/pubs/papers/Big{\_}HDF{\_}FAQs.pdf}",
year = {2014}
}

@book{MicroserviceNewMan,
abstract = {Distributed systems have become more fine-grained in the past 10 years, shifting from code-heavy monolithic applications to smaller, self-contained microservices. But developing these systems brings its own set of headaches. With lots of examples and practical advice, this book takes a holistic view of the topics that system architects and administrators must consider when building, managing, and evolving microservice architectures.Microservice technologies are moving quickly. Author Sam Newman provides you with a firm grounding in the concepts while diving into current solutions for modeling, integrating, testing, deploying, and monitoring your own autonomous services. You'll follow a fictional company throughout the book to learn how building a microservice architecture affects a single domain.Discover how microservices allow you to align your system design with your organization's goalsLearn options for integrating a service with the rest of your systemTake an incremental approach when splitting monolithic codebasesDeploy individual microservices through continuous integrationExamine the complexities of testing and monitoring distributed servicesManage security with user-to-service and service-to-service modelsUnderstand the challenges of scaling microservice architectures},
archivePrefix = {arXiv},
arxivId = {1606.04036},
author = {Newman, Sam},
booktitle = {O'Reilly},
doi = {10.1109/MS.2016.64},
eprint = {1606.04036},
file = {:Users/prannoy/Library/Application Support/Mendeley Desktop/Downloaded/Newman - 2015 - Building Microservices.pdf:pdf},
isbn = {978-1-491-95035-7},
issn = {07407459},
keywords = {www.it-ebooks.info},
pages = {280},
publisher = {Oreilly},
title = {{Building Microservices}},
howpublished = "[Online] \url{http://zempirians.com/ebooks/Sam Newman-Building Microservices-O{\%}27Reilly Media (2015).pdf https://www.google.hr/books?hl=en{\&}lr={\&}id=jjl4BgAAQBAJ{\&}pgis=1{\%}5Cnhttp:// oreilly.com/catalog/errata.csp?isbn=9781491950357 }",
year = {2015},
note={{ISBN:} 978-1-491-95035-7}
}


@misc{Synology,
title = {{DiskStation Manager | Synology Inc.}},
howpublished = "[Online] \url{https://www.synology.com/en-global/dsm}",
urldate = {2018-02-09}
}

@book{DistributedSystems,
author = {{Van Steen}, Maarten and Tanenbaum, Andrew S},
file = {::},
isbn = {978-90-815406-2-9},
number = {3},
pages = {596},
title = {{Distributed Systems}},
url = {https://distsys.utwente.nl/Books/DS3/copies/180211/c5121ea7694d5a990b1d66618c2f86c8/Distributed{\_}Systems{\_}3-180211.pdf},
year = {2017},
note={{ISBN:} 978-90-815406-2-9}
}


@book{DDD,
abstract = {The most complicated aspect of large software projects is not the implementation, it is the real world domain that the software serves. Domain Driven Design is a vision and approach for dealing with highly complex domains that is based on making the domain itself the main focus of the project, and maintaining a software model that reflects a deep understanding of the domain. The vision was brought to the world by Eric Evans in his book "Domain Driven Design". Eric's work was based on 20 years of widely accepted best practices in the object community, as well as Eric's own insights. Domain Driven Design Quickly is a short, quick-readable summary and introduction to the fundamentals of DDD. A special interview with Eric Evans on the state of Domain Driven Design is also included.},
archivePrefix = {arXiv},
arxivId = {arXiv:1011.1669v3},
author = {Eric Evans},
booktitle = {Online},
doi = {978-0321125217},
eprint = {arXiv:1011.1669v3},
file = {:Users/prannoy/Thesis/Research/Eric Evans 2003 - Domain-Driven Design - Tackling Complexity in the Heart of Software.pdf:pdf},
isbn = "978-0-321-12521-7",
issn = {00155713},
pages = {104},
pmid = {12566760},
title = {{Domain Driven Design Quickly}},
year = {2006},
note={{ISBN:} 978-0-321-12521-7}
}

@book{SOA,
author = {Erl, Thomas and Merson, Paulo and Stoffers, Roger},
editor = {Wiegand, Greg},
file = {:Users/prannoy/Downloads/service-oriented-architecture-thomas-erl301(www.ebook-dl.com)/service-oriented-architecture-thomas-erl301(www.ebook-dl.com).pdf:pdf},
isbn = {978-0-13-385858-7},
pages = {428},
publisher = {Taub Mark},
title = {{Service-Oriented Architecture}},
year = {2016},
note={{ISBN:} 978-0-13-385858-7}
}

@misc{FowlerMartin,
author = {{Fowler Martin}},
title = {{Microservices Guide}},
howpublished = "[Online] \url{https://martinfowler.com/microservices/}"
}

@book{GIS,
author = {GRAEME F., BONHAM-CARTER},
title = {{Geographic Information Systems For Geoscientists}},
isbn = {0 080 418 678},
pages = {428},
publisher = {Taub Mark},
title = {{Service-Oriented Architecture}},
year = {2016},
note={{ISBN:} 0 080 418 678}
}

@misc{FowlerMartin,
author = {{Fowler Martin}},
title = {{Microservices Guide}},
howpublished = "[Online] \url{https://martinfowler.com/microservices/}"
}

@misc{MongoDB,
abstract = {Learn about NoSQL databases, the difference between NoSQL and SQL, and which type will meet your enterprise needs.},
archivePrefix = {arXiv},
arxivId = {1401.2101},
author = {Hauck, Matthias},
booktitle = {MongoDB},
eprint = {1401.2101},
title = {{NoSQL Databases Explained}},
url = {https://www.mongodb.com/nosql-explained http://www.mongodb.com/nosql-explained{\%}5Cnhttps://www.mongodb.com/nosql-explained},
howpublished = "[Online] \url{https://www.mongodb.com/nosql-explained}",
year = {2014}
}

@thesis{DepDiagram,
author = {Krastev, Petar},
year = {2018},
title = {Design and Implementation of an Deletion Microservice solution for the Multi-Agent Research and
Simulation Distributed System}
}

@article{agentModeling,
abstract = {The advent of widespread fast computing has enabled us to work on more complex problems and to build and analyze more complex models. This book provides an introduction to one of the primary methodologies for research in this new field of knowledge. Agent-based modeling (ABM) offers a new way of doing science: by conducting computer-based experiments. ABM is applicable to complex systems embedded in natural, social, and engineered contexts, across domains that range from engineering to ecology.  An Introduction to Agent-Based Modeling offers a comprehensive description of the core concepts, methods, and applications of ABM. Its hands-on approach -- with hundreds of examples and exercises using NetLogo -- enables readers to begin constructing models immediately, regardless of experience or discipline.The book first describes the nature and rationale of agent-based modeling, then presents the methodology for designing and building ABMs, and finally discusses how to utilize ABMs to answer complex questions. Features in each chapter include step-by-step guides to developing models in the main text; text boxes with additional information and concepts; end-of-chapter explorations; and references and lists of relevant reading. There is also an accompanying website with all the models and code.},
author = {Chaudhry, Qasim Ali},
doi = {10.1186/s40294-016-0027-6},
file = {:Users/prannoy/Downloads/An{\_}introduction{\_}to{\_}agent-based{\_}modeling{\_}modeling{\_}n.pdf:pdf},
isbn = {9780262328111},
issn = {2194-3206},
journal = {Complex Adaptive Systems Modeling},
keywords = {Agent-based modeling (ABM),Agents,Complex systems,NetLogo,abm,agent-based modeling,agents,complex systems,netlogo},
publisher = {Springer Berlin Heidelberg},
title = {{An introduction to agent-based modeling modeling natural, social, and engineered complex systems with NetLogo: a review}},
url = {http://casmodeling.springeropen.com/articles/10.1186/s40294-016-0027-6},
year = {2016},
note={{ISSN:} 9780262328111}
}

@article{Ceph,
author = {Weil, Sage A. and Brandt, Scott A. and Miller, Ethan L. and Long, Darrell DE and Maltzahn, Carlos},
file = {:Users/prannoy/Downloads/p307-weil.pdf:pdf},
isbn = {1-931971-47-1},
pages = {307--320},
title = {{Ceph: A scalable, high-performance distributed file system}},
url = {http://dl.acm.org/citation.cfm?id=1298485{\%}0Ahttp://delivery.acm.org/10.1145/1300000/1298485/p307-weil.pdf?ip=104.194.110.11{\&}id=1298485{\&}acc=ACTIVE SERVICE{\&}key=50864D773CC43BF0{\%}252E50864D773CC43BF0{\%}252E4D4702B0C3E38B35{\%}252E4D4702B0C3E38B35{\&}CFID=586646971{\&}CFTO},
year = {2006},
note={{ISBN:} 1-931971-47-1}
}

@book{softwareDesign,
abstract = {Includes index. Software Engineering Step-by-Step -- Software Engineering Step-by-Step. Software Engineering from 20,000 Feet -- Before the Beginning -- Project Management -- Requirement Gathering -- High-Level Design -- Low-Level Design -- Development -- Testing -- Deployment -- Metrics -- Maintenance -- Process Models -- Process Models. Predictive Models -- Iterative Models -- RAD -- Solution to Exercises.},
doi = {10.1002/9781119209515},
file = {:Users/prannoy/Downloads/Beginning Software Engineering - Rod Stephens.pdf:pdf},
isbn = {9781119209515},
title = {{Beginning Software Engineering}},
url = {http://doi.wiley.com/10.1002/9781119209515},
year = {2012},
note={{ISBN:} 9781119209515}
}

@article{Haerder1983,
abstract = {In this paper, a terminological framework is provided for describing different transaction-oriented recovery schemes for database systems in a conceptual rather than an implementation-dependent way. By introducing the terms materialized database, propagation strategy, and checkpoint, we obtain a means for classifying arbitrary implementations from a unified viewpoint. This is complemented by a classification scheme for logging techniques, which are precisely defined by using the other terms. It is shown that these criteria are related to all relevant questions such as speed and scope of recovery and amount of redundant information required. The primary purpose of this paper, however, is to establish an adequate and precise terminology for a topic in which the confusion of concepts and implementational aspects still imposes a lot of problems.},
author = {Haerder, Theo and Reuter, Andreas},
doi = {10.1145/289.291},
file = {:Users/prannoy/Library/Application Support/Mendeley Desktop/Downloaded/Haerder, Reuter - Unknown - Principles of Transaction-Oriented Database Recovery.pdf:pdf},
isbn = {1558602526},
issn = {03600300},
journal = {ACM Computing Surveys},
keywords = {Categories and Subject Descriptors,D45 [Operating Systems],Databases,Fault Tolerance,General,H10 [Models and Principles],H22 [Database Management],H24 [Database Management],H27 [Database Management],Physical Design--recovery and restart,Reliability--fau/t tolerance,Systems--transactmn processing,Transactions},
number = {4},
pages = {287--317},
title = {{Principles of transaction-oriented database recovery}},
url = {http://delivery.acm.org/10.1145/10000/291/p287-haerder.pdf?ip=141.22.29.238{\&}id=291{\&}acc=ACTIVE SERVICE{\&}key=2BA2C432AB83DA15.7953D496BAF38C0F.4D4702B0C3E38B35.4D4702B0C3E38B35{\&}{\_}{\_}acm{\_}{\_}=1527861839{\_}06d007f7a270a7197dbaa273d63682ab http://portal.acm.org/citation.cfm?doid=289.291},
volume = {15},
year = {1983},
note={{ISSN:} 0360-0300}
}

@article{TrafficModel,
abstract = {Microscopic traffic models are used to simulate traffic in very detailed way. While this approach can pro- vide very accurate results, it usually leads to high computational overhead when scaling these models to a larger space with many agents involved. Realistic simulations are also in need of accurate road data to substantiate the results. To approach these problems we present an open data based extension of the MARS system (Multi-Agent Research and Simulation) capable of simulating the traffic of an entire city. Ham- burg (Germany) where the system is being developed is used as a case study to showcase these newly built components.},
author = {Weyl, Julius and Glake, Daniel and Clemen, Thomas},
file = {:Users/prannoy/Downloads/agent{\_}based{\_}traffic{\_}simulation{\_}at{\_}city{\_}scale{\_}with{\_}mars.pdf:pdf},
journal = {Proceedings of the 2018 Spring Simulation Multiconference},
keywords = {agent-based,city scale,traffic},
pages = {9},
title = {{Agent-based Traffic Simulation at City Scale with MARS}},
url = {https://owncloud.informatik.haw-hamburg.de/index.php/apps/files/?dir=/MARS/Papers/SpringSim 2018{\&}fileid=21639287{\#}pdfviewer},
year = {2018}
}

@thesis{Grundmann2018,
abstract = {This thesis introduces another implementation of the Basic Immune Simulator (BIS) usingthe Multi-Agent Simulation and Research (MARS) framework. Mainly due its functional logicthe implementation is extensive, complex and thus expensive to maintain. Targeting a modelreduction through global sensitivity analysis (GSA), this thesis primarily focus on GSA withMARS. The primary result is a batch evaluation system. Finally the thesis gives an usageexamples of the new toolset and evaluates its and MARS BIS' current state. The evaluationshows, that MARS generally is capable to do GSAs. But it does not make sense to apply a GSA on MARS BIS, yet.},
author = {Grundmann, Lukas and Grundmann, Lukas},
file = {:Users/prannoy/Downloads/Studentische Arbeiten/Lukas Grundmann/MA{\_}Grundmann.pdf:pdf},
keywords = {MARS,agent-based modelling,automatisation,sensitivity analysis},
pages = {114},
school = {Hochschule f{\"{u}}r Angewandte Wissenschaften Hamburg},
title = {{Masterarbeit}},
year = {2018}
}

@article{CAP,
abstract = {When designing distributed web services, there are three properties that are commonly desired: consistency, availability, and partition tolerance. It is impossible to achieve all three. In this note, we prove this conjecture in the asynchronous network model, and then discuss solutions to this dilemma in the partially synchronous model.},
author = {Gilbert, Seth and Lynch, Nancy},
doi = {10.1145/564585.564601},
file = {:Users/prannoy/Library/Application Support/Mendeley Desktop/Downloaded/Gilbert, Lynch - 2004 - Brewer's Conjecture and the Feasibility of Consistent, Available, Partition-Tolerant Web Services(2).pdf:pdf},
isbn = {9781450300360},
issn = {01635700},
journal = {ACM SIGACT News},
pages = {51},
pmid = {544596},
title = {{Brewer's conjecture and the feasibility of consistent, available, partition-tolerant web services}},
url = {http://delivery.acm.org/10.1145/570000/564601/p51-gilbert.pdf?ip=141.22.29.218{\&}id=564601{\&}acc=ACTIVE SERVICE{\&}key=2BA2C432AB83DA15.7953D496BAF38C0F.4D4702B0C3E38B35.4D4702B0C3E38B35{\&}{\_}{\_}acm{\_}{\_}=1528310525{\_}455aa2df24eff762c88634a4d0f9e520 http://portal.acm.org/citation.cfm?doid=564585.564601},
volume = {33},
year = {2002},
note={{ISBN:} 9781450300360}
}

@misc{grpc,
author={Google},
howpublished="[Online] \url{https://grpc.io}",
}

@misc{HTTP,
author={Mozilla},
howpublished="[Online] \url{https://developer.mozilla.org/en-US/docs/Web/HTTP}",
}

@misc{WebSockets,
author={Mozilla},
howpublished="[Online] \url{https://developer.mozilla.org/en-US/docs/Web/API/WebSockets_API}",
}

@misc{Polyglot,
author = {{Martin Fowler}},
title = {{PolyglotPersistence}},
url = {https://martinfowler.com/bliki/PolyglotPersistence.html},
howpublished="[Online] \url{https://martinfowler.com/bliki/PolyglotPersistence.html}",
urldate = {2018-06-07},
year = {2011}
}

@misc{kubernetes,
author = {Google},
title = {{Production-Grade Container Orchestration - Kubernetes}},
url = {https://kubernetes.io/},
urldate = {2018-06-10},
howpublished="[Online] \url{https://kubernetes.io/}",
}

@misc{swagger,
author = {SmartBear Software},
title = {{Swagger}},
url = {https://swagger.io/},
urldate = {2018-06-17},
howpublished="[Online] \url{https://swagger.io/}",
}

@phdthesis{REST,
 author = {Fielding, Roy Thomas},
 title = {Architectural Styles and the Design of Network-based Software Architectures},
 year = {2000},
 isbn = {0-599-87118-0},
 publisher = {University of California, Irvine},
 note={{ISBN:} 0-599-87118-0}
} 

@thesis{RESTThesis,
author = {Eizinger, Thomas and {Bernhard L{\"{o}}wenstein Lukasz Juszczyk Vienna}, Mag DI},
file = {::},
title = {{API Design in Distributed Systems: A Comparison between GraphQL and REST}},
url = {https://eizinger.io/assets/Master-Thesis.pdf},
year = {2017}
}

@article{Hotop2015,
author = {Hotop, Hans-J{\"{u}}rgen},
title = {{Software Engineering Contents (main subjects) HAW Hamburg}},
url = {http://users.etech.haw-hamburg.de/users/Hotop/Java/SE1scriptss2015.pdf},
year = {2015}
}

@misc{WARC,
author={iso},
title={WARC file format},
howpublished="[Online] \url{http://archive-access.sourceforge.net/warc/warc_file_format-0.16.html}",
}

@misc{MARSCLoud,
author={HAW Hamburg MARS},
title={MARS Cloud}
}

@misc{Hangfire,
author={Sergey Odinokov},
title={Hangfire},
howpublished="[Online] \url{https://www.hangfire.io}",
}

@article{atomic,
abstract = {Synchronization of accesses to shared data and recovering the state of such data in the case of failures are really two aspects of the same problem--implementing atomic actions on a related set of data items. In this paper a mechanism that solves both problems simultaneously in a way that is compatible with requirements of decentralized systems is described. In particular, the correct construction and execution of a new atomic action can be accomplished without knowledge of all other atomic actions in the system that might execute concurrently. Further, the mechanisms degrade gracefully if parts of the system fail: only those atomic actions that require resources in failed parts of the system are prevented from executing, and there is no single coordinator that can fail and bring down the whole system.},
author = {Reed, David P},
doi = {10.1145/357353.357355},
file = {::},
issn = {07342071},
journal = {ACM Transactions on Computer Systems},
keywords = {Algorithms,C24 [Computer-Communication Networks],Categories and Subject Descriptors,D43 [Operating Systems],Distributed Systems--distributed databases,File Systems Management--distrib uted file systems,H22 [Database Management],H24 [Database Management],H27 [Database Management],Physical Design--deadlock avoidance,Reliability Additional Key Words and Phrases,Systems--distributed systems,nested atomic actions,recovery and restart,stable storage,time-domain addressing,transaction processing,two-phase commit},
number = {1},
pages = {3--23},
title = {{Implementing atomic actions on decentralized data}},
url = {http://delivery.acm.org/10.1145/360000/357355/p3-reed.pdf?ip=141.22.29.240{\&}id=357355{\&}acc=ACTIVE SERVICE{\&}key=2BA2C432AB83DA15.7953D496BAF38C0F.4D4702B0C3E38B35.4D4702B0C3E38B35{\&}{\_}{\_}acm{\_}{\_}=1531321643{\_}d6ca558b29c7bc7b22dffff759c7d8a4},
volume = {1},
year = {1983},
 note={{ISSN:} 07342071}
}





